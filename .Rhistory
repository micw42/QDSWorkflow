df = read.csv("Downloads/wk4.csv") %>% select(c(6, 8))
colnames(df) = c("HABA_free", "HABA_av")
df = df %>% filter(!is.na(HABA_av))
df
hyp = function(a, b, x) {
x*a/(b+x)
}
ha = df$HABA_av
hf = df$HABA_free
nls(ha~hyp(a, b, hf), start=list(a=0, b=0), trace=T)
hyp = function(a, b, x) {
x*a/(b+x)
}
ha = df$HABA_av
hf = df$HABA_free
nls(ha~hyp(a, b, hf), start=list(a=0, b=0.1), trace=T)
hyp = function(a, b, x) {
x*a/(b+x)
}
ha = df$HABA_av
hf = df$HABA_free
nls(ha~hyp(a, b, hf), start=list(a=0.1, b=0.1), trace=T)
df = read.csv("wk4b.csv")
df
x = df[,8]
y = df[,2]
x
y
df = read.csv("wk4b.csv")
x = df[,8]
y = df[,2]
hyp = function(a, b, c, x) {
(a-b)/(1+x/c)+b
}
ha = df$HABA_av
hf = df$HABA_free
nls(ha~hyp(a, b, hf), start=list(a=0.1, b=0.1), trace=T)
df = read.csv("wk4b.csv")
x = df[,8]
y = df[,2]
hyp = function(a, b, c, x) {
(a-b)/(1+x/c)+b
}
ha = df$HABA_av
hf = df$HABA_free
nls(y~hyp(a, b, c, x), start=list(a=0.1, b=0.1), trace=T)
df = read.csv("wk4b.csv")
x = df[,8]
y = df[,2]
hyp = function(a, b, c, x) {
(a-b)/(1+x/c)+b
}
ha = df$HABA_av
hf = df$HABA_free
nls(y~hyp(a, b, c, x), start=list(a=0.1, b=0.1, c=0.1), trace=T)
read.delim("Downloads/GSM5704920_2154297_PC9_WT_1.RSEM.genes.counts.tab")
library(dplyr)
select = dplyr::select
se_tr = read.csv("Downloads/batch4_SE_trimmomatic_result.csv")
se_tr
se_tr = read.csv("Downloads/batch4_SE_trimmomatic_result.csv")
r1_a = se_tr %>% filter(grepl("R1", pair)) %>% select(input_reads)
r1_a
se_tr = read.csv("Downloads/batch4_SE_trimmomatic_result.csv")
r1_a = se_tr %>% filter(grepl("R1", pair)) %>% select(pair, input_reads)
r1_a
se_tr = read.csv("Downloads/batch4_SE_trimmomatic_result.csv")
r1_a = se_tr %>% filter(grepl("R1", pair)) %>% select(pair, input_reads)%>%
mutate(sample=as.numeric(str_extract(pair, "[^_]+")))
se_tr = read.csv("Downloads/batch4_SE_trimmomatic_result.csv")
r1_a = se_tr %>% filter(grepl("R1", pair)) %>% select(pair, input_reads)%>%
mutate(sample=as.numeric(str_extract(pair, "[^_]+")[1]))
library(stringr)
se_tr = read.csv("Downloads/batch4_SE_trimmomatic_result.csv")
r1_a = se_tr %>% filter(grepl("R1", pair)) %>% select(pair, input_reads)%>%
mutate(sample=as.numeric(str_extract(pair, "[^_]+")[1]))
r1_a
r1_a = se_tr %>% filter(grepl("R1", pair)) %>% select(pair, input_reads)%>%
mutate(sample=as.numeric(str_extract(pair, "[^_]+")))
se_tr = read.csv("Downloads/batch4_SE_trimmomatic_result.csv")
r1_a = se_tr %>% filter(grepl("R1", pair)) %>% select(pair, input_reads)%>%
mutate(sample=as.numeric(str_extract(pair, "[^_]+")))
r1_a
r1_a = se_tr %>% filter(grepl("R1", pair)) %>% select(pair, input_reads)%>%
mutate(sample=as.numeric(str_extract(pair, "[^_]+"))) %>% arrange(sample)
r1_a
pe = read.csv("Downloads/batch4_trimmomatic_result.csv")
pe
r1_a
r2_a
se_tr = read.csv("Downloads/batch4_SE_trimmomatic_result.csv")
r1_a = se_tr %>% filter(grepl("R1", pair)) %>% select(pair, input_reads)%>%
mutate(sample=as.numeric(str_extract(pair, "[^_]+"))) %>% arrange(sample)
r2_a = se_tr %>% filter(grepl("R2", pair)) %>% select(pair, input_reads)%>%
mutate(sample=as.numeric(str_extract(pair, "[^_]+"))) %>% arrange(sample)
pe = read.csv("Downloads/batch4_trimmomatic_result.csv")
r1_a
r2_a
pe
pe = read.csv("Downloads/batch4_trimmomatic_result.csv") %>% arrange(File)
r1_a
r2_a
pe
se_tr = read.csv("Downloads/batch4_SE_trimmomatic_result.csv")
r1_a = se_tr %>% filter(grepl("R1", pair)) %>% select(pair, input_reads)%>%
mutate(sample=as.numeric(str_extract(pair, "[^_]+"))) %>% arrange(sample)
samples = r1_a$sample
r1_a = r1_a %>% pull(input_reads)
r2_a = se_tr %>% filter(grepl("R2", pair)) %>% select(pair, input_reads)%>%
mutate(sample=as.numeric(str_extract(pair, "[^_]+"))) %>% arrange(sample) %>%
pull(input_reads)
pe = read.csv("Downloads/batch4_trimmomatic_result.csv") %>% arrange(File) %>%
pull(input_read_pairs)
a = data.frame(sample=samples,
r1_raw=r1_a, r2_raw=r2_a, pe_raw=pe)
a
se_tr = read.csv("Downloads/batch4_SE_trimmomatic_result.csv")
r1_a = se_tr %>% filter(grepl("R1", pair)) %>% select(pair, input_reads)%>%
mutate(sample=as.numeric(str_extract(pair, "[^_]+"))) %>% arrange(sample)
samples = r1_a$sample
r1_a = r1_a %>% pull(input_reads)
r2_a = se_tr %>% filter(grepl("R2", pair)) %>% select(pair, input_reads)%>%
mutate(sample=as.numeric(str_extract(pair, "[^_]+"))) %>% arrange(sample)
pe = read.csv("Downloads/batch4_trimmomatic_result.csv") %>% arrange(File)
a = data.frame(sample=samples,
r1_raw=r1_a$input_reads, r2_raw=r2_a$input_reads, pe_raw=pe$input_read_pairs)
se_tr = read.csv("Downloads/batch4_SE_trimmomatic_result.csv")
r1_a = se_tr %>% filter(grepl("R1", pair)) %>% select(pair, input_reads)%>%
mutate(sample=as.numeric(str_extract(pair, "[^_]+"))) %>% arrange(sample)
samples = r1_a$sample
r2_a = se_tr %>% filter(grepl("R2", pair)) %>% select(pair, input_reads)%>%
mutate(sample=as.numeric(str_extract(pair, "[^_]+"))) %>% arrange(sample)
pe = read.csv("Downloads/batch4_trimmomatic_result.csv") %>% arrange(File)
a = data.frame(sample=samples,
r1_raw=r1_a$input_reads, r2_raw=r2_a$input_reads, pe_raw=pe$input_read_pairs)
a
r1_a
se_tr = read.csv("Downloads/batch4_SE_trimmomatic_result.csv")
r1_a = se_tr %>% filter(grepl("R1", pair)) %>%
mutate(sample=as.numeric(str_extract(pair, "[^_]+"))) %>% arrange(sample)
samples = r1_a$sample
r2_a = se_tr %>% filter(grepl("R2", pair)) %>%
mutate(sample=as.numeric(str_extract(pair, "[^_]+"))) %>% arrange(sample)
pe = read.csv("Downloads/batch4_trimmomatic_result.csv") %>% arrange(File)
a = data.frame(sample=samples,
r1_raw=r1_a$input_reads, r2_raw=r2_a$input_reads, pe_raw=pe$input_read_pairs)
a
r1_a
b = data.frame(sample=sample,
r1_surv=r1_a$surviving, r2_surv=r2_a$surviving, pe_surv=pe$both_surviving)
b = data.frame(sample=samples,
r1_surv=r1_a$surviving, r2_surv=r2_a$surviving, pe_surv=pe$both_surviving)
b
r1_sep = read.csv("Downloads/batch4_R1_SE_preproc.csv")
r1_sep
r2_sep = read.csv("Downloads/batch4_R2_SE_preproc.csv")
r2_sep
r1_sep = read.csv("Downloads/batch4_R1_SE_preproc.csv") %>%
mutate(sample=as.numeric(str_extract(Sequence.information, "[^_]+"))) %>% arrange(sample)
r2_sep = read.csv("Downloads/batch4_R2_SE_preproc.csv") %>%
mutate(sample=as.numeric(str_extract(Sequence.information, "[^_]+"))) %>% arrange(sample)
r2_sep
arrange_sample = function(df, arr_col) {
df_arr = df %>%
mutate(sample=as.numeric(str_extract(!!sym(arr_col), "[^_]+"))) %>% arrange(sample)
return(df_arr)
}
r1_a = se_tr %>% filter(grepl("R1", pair)) %>% arrange_sample(arr_col="pair")
r1_a
se_tr = read.csv("Downloads/batch4_SE_trimmomatic_result.csv")
r1_a = se_tr %>% filter(grepl("R1", pair)) %>% arrange_sample(arr_col="pair")
samples = r1_a$sample
r2_a = se_tr %>% filter(grepl("R2", pair)) %>% arrange_sample(arr_col="pair")
pe = read.csv("Downloads/batch4_trimmomatic_result.csv") %>% arrange(File)
a = data.frame(sample=samples,
r1_raw=r1_a$input_reads, r2_raw=r2_a$input_reads, pe_raw=pe$input_read_pairs)
a
pe_sep = read.csv("Downloads/batch4_PE_R2Adapt_valid.csv")
pe_sep
pe_sep = read.csv("Downloads/batch4_PE_R2Adapt_valid.csv")
pe_sep
pe_sep = read.csv("Downloads/batch4_PE_R2Adapt_valid.csv") %>% arrange_sample()
read.csv("Downloads/batch4_PE_R2Adapt_valid.csv")
r1_sep = read.csv("Downloads/batch4_R1_SE_preproc.csv") %>% arrange_sample(arr_col = "Sequence.information")
r2_sep = read.csv("Downloads/batch4_R2_SE_preproc.csv") %>% arrange_sample(arr_col = "Sequence.information")
pe_sep = read.csv("Downloads/batch4_PE_R2Adapt_valid.csv") %>% arrange_sample(arr_col = "Sequence.information")
r1_sep
r2_sep
pe_sep
b2 = data.frame(sample=samples, r1_val=r1_sep$Valid.sequences,
r2_val=r2_sep$Valid.sequences, pe_val=pe_sep$Valid.sequences)
r1_sep
r2_sep
pe_sep
r1_sep = read.csv("Downloads/batch4_R1_SE_preproc.csv") %>% arrange_sample(arr_col = "Sequence.information")
r2_sep = read.csv("Downloads/batch4_R2_SE_preproc.csv") %>% arrange_sample(arr_col = "Sequence.information")
pe_sep = (read.csv("Downloads/batch4_PE_R2Adapt_valid.csv") %>% arrange_sample(arr_col = "Sequence.information"))
b2 = data.frame(sample=samples, r1_val=r1_sep$Valid.sequences,
r2_val=r2_sep$Valid.sequences, pe_val=pe_sep$Valid.sequences[-nrow(pe_sep)])
b2
r1_raw = read.csv("Downloads/batch4_R1_SE_raw.csv")
r1_raw
colSums(r1_raw[,-c(1,2)])
colSums(r1_raw[,c(-1,-2)])
r1_raw
c = read.csv("Downloads/batch4_PE_R2Adapt_counts.csv")
c
c = read.csv("r1_r2_pe_mapped_counts.csv")
c
Reduce(inner_join, list(a, b, b2, c), by="sample")
Reduce(inner_join, list(a, b, b2, c))
pe_df = read.csv("Downloads/batch4_PE_R2Adapt_counts.csv")
r2_df = read.csv("Downloads/batch4_R2_SE_raw.csv")
r2_df
pe_df = read.csv("Downloads/batch4_PE_R2Adapt_counts.csv")
r2_df = read.csv("Downloads/batch4_R2_SE_raw.csv")
r2_df
pe_df = read.csv("Downloads/batch4_PE_R2Adapt_counts.csv")
r2_df = read.csv("Downloads/batch4_R2_SE_raw.csv")
pe_map = which(pe_df$X1_join!=0)
r2_map = which(r2_df$X1_join!=0)
length(pe_map)
length(r2_map)
pe_df = read.csv("Downloads/batch4_PE_R2Adapt_counts.csv")
r2_df = read.csv("Downloads/batch4_R2_SE_raw.csv")
pe_map = which(pe_df$X1_join!=0)
r2_map = which(r2_df$X1_R2_adapt10!=0)
length(r2_map)
setdiff(r2_map, pe_map)
setdiff(pe_map, r2_map)
df = Reduce(inner_join, list(a, b, b2, c))
df
df = Reduce(inner_join, list(a, b, b2, c))
write.csv(df, "batch4_summary.csv", row.names = F)
df
df %>% filter(pe_val > r2_val)
df %>% filter(PE_sum > R2_sum)
df = read.csv("Downloads/Liver_readcount_df.csv")
df
df %>% filter(Description=="PLA2G2A" | Description=="SP1")
normal_deseq = function(full_df, cond_df) {
dds <- DESeqDataSetFromMatrix(countData = full_df, colData = cond_df, design = ~ 1)
vsd <- DESeq2::varianceStabilizingTransformation(dds)
vsd = as.data.frame(assay(vsd))
return(vsd)
}
library(tidyverse)
df %>% select(-one_of("X", "id", "Name")) %>% column_to_rownames(var="Description")
df %>% select(-one_of("X", "id", "Name")) %>% distinct(Description, .keep_all = T) %>%
column_to_rownames(var="Description")
cond_df = read.csv("Downloads/pla2_samples.csv")
cond_df
gsub("-", ".", "GTEX-1117F-0226-SM-5GZZ7")
cond_df = read.csv("Downloads/pla2_samples.csv") %>%
mutate(sample=gsub("-", ".", sample))
cond_df
cond_df = read.csv("Downloads/pla2_samples.csv") %>%
mutate(sample=gsub("-", ".", sample)) %>%
dplyr::slice(match(colnames(df), sample))
cond_df
cond_df = read.csv("Downloads/pla2_samples.csv") %>%
mutate(sample=gsub("-", ".", sample)) %>%
dplyr::slice(match(sample, colnames(df)))
cond_df
colnames(df)
cond_df$sample
cond_df = read.csv("Downloads/pla2_samples.csv") %>%
mutate(sample=gsub("-", ".", sample))
cond_df$sample
intersect(colnames(df), cond_df$sample)
df
cond_df = read.csv("Downloads/pla2_samples.csv")
cond_df
cond_df = read.csv("Downloads/pla2_samples.csv")
cond_df
cond_df %>% distinct(subject)
cond_df %>% filter(grepl("11DXZ", subject))
cond_df %>% filter(grepl("1117F", subject))
cond_df %>% filter(grepl("11EQ9", subject))
gsub(".", "-", "GTEX.11DXZ.0126.SM.5EGGY")
gsub("/.", "-", "GTEX.11DXZ.0126.SM.5EGGY")
gsub("\.", "-", "GTEX.11DXZ.0126.SM.5EGGY")
gsub("\\.", "-", "GTEX.11DXZ.0126.SM.5EGGY")
strsplit("GTEX-11DXZ-0126-SM-5EGGY", "\\.")
strsplit("GTEX.11DXZ.0126.SM.5EGGY", "\\.")
head(colnames(df))
df = df %>% select(-one_of("X", "id", "Name")) %>% distinct(Description, .keep_all = T) %>%
column_to_rownames(var="Description")
df = df %>% select(-one_of("X", "id", "Name")) %>% distinct(Description, .keep_all = T) %>%
head(colnames(df))
strsplit(colnames(df), ".\\")
strsplit(colnames(df), "\\.")
strsplit(colnames(df), "\\.") %>% sapply("[[", 1)
strsplit(colnames(df), "\\.") %>% sapply("[[", 2)
df = read.csv("Downloads/Liver_readcount_df.csv")
df = df %>% select(-one_of("X", "id", "Name")) %>% distinct(Description, .keep_all = T) %>%
column_to_rownames(var="Description")
colnames(df) = strsplit(colnames(df), "\\.") %>% sapply("[[", 2)
df
cond_df = read.csv("Downloads/pla2_samples.csv")
cond_df
cond_df = read.csv("Downloads/pla2_samples.csv")
cond_df$subject = strsplit(cond_df$subject, "-") %>% sapply("[[", 2)
cond_df
intersect(colnames(df), cond_df$subject)
setdiff(colnames(df), cond_df$subject)
setdiff(colnames(df), cond_df$subject) %>% length()
ncol(df)
setdiff(colnames(df), cond_df$subject) %>% length()
intersect(colnames(df), cond_df$subject) %>% length()
cond_df %>% dplyr::slice(match(colnames(df), subject))
geno_df = read.csv("Downloads/pla2_samples.csv")
geno_df$subject = strsplit(geno_df$subject, "-") %>% sapply("[[", 2)
cond_df = data.frame(subject=colnames(df))
left_join(cond_df, geno_df, by="subject")
cond_df = data.frame(subject=colnames(df)) %>% left_join(geno_df, by="subject")
cond_df
cond_df %>% filter(!is.na(geno))
cond_df %>% filter(is.na(geno))
df = read.csv("Downloads/Liver_readcount_df.csv")
df = df %>% select(-one_of("X", "id", "Name")) %>% distinct(Description, .keep_all = T) %>%
column_to_rownames(var="Description")
colnames(df) = gsub(".", "-", colnames(df))
df
df = read.csv("Downloads/Liver_readcount_df.csv")
df = df %>% select(-one_of("X", "id", "Name")) %>% distinct(Description, .keep_all = T) %>%
column_to_rownames(var="Description")
colnames(df) = gsub("\\.", "-", colnames(df))
df
missing = cond_df %>% filter(is.na(geno)) %>% pull(subject)
colnames(df)[grepl(subject, colnames(df))]
colnames(df)[grepl(missing, colnames(df))]
df = read.csv("Downloads/Liver_readcount_df.csv")
df = df %>% select(-one_of("X", "id", "Name")) %>% distinct(Description, .keep_all = T) %>%
column_to_rownames(var="Description")
full_names = colnames(df)
colnames(df) = strsplit(colnames(df), "\\.") %>% sapply("[[", 2)
geno_df = read.csv("Downloads/pla2_samples.csv")
geno_df$subject = strsplit(geno_df$subject, "-") %>% sapply("[[", 2)
cond_df = data.frame(subject=colnames(df), full_name=full_names) %>% left_join(geno_df, by="subject")
cond_df %>% filter(is.na(geno))
df = read.csv("Downloads/Liver_readcount_df.csv")
df = df %>% select(-one_of("X", "id", "Name")) %>% distinct(Description, .keep_all = T) %>%
column_to_rownames(var="Description")
full_names = gsub("\\.", "-", colnames(df))
colnames(df) = strsplit(colnames(df), "\\.") %>% sapply("[[", 2)
geno_df = read.csv("Downloads/pla2_samples.csv")
geno_df$subject = strsplit(geno_df$subject, "-") %>% sapply("[[", 2)
cond_df = data.frame(subject=colnames(df), full_name=full_names) %>% left_join(geno_df, by="subject")
cond_df %>% filter(is.na(geno))
missing = cond_df %>% filter(is.na(geno)) %>% pull(full_name)
write(missing, "missing_geno.txt", sep="\n")
cond_df = read.csv("Downloads/pla2_samples.csv")
cond_df
cond_df %>% distinct(subject)
df = read.csv("Downloads/Liver_readcount_df.csv")
df = df %>% select(-one_of("X", "id", "Name")) %>% distinct(Description, .keep_all = T) %>%
column_to_rownames(var="Description")
full_names = gsub("\\.", "-", colnames(df))
colnames(df) = strsplit(colnames(df), "\\.") %>% sapply("[[", 2)
geno_df = read.csv("Downloads/pla2_samples.csv")
geno_df$subject = strsplit(geno_df$subject, "-") %>% sapply("[[", 2)
cond_df = data.frame(subject=colnames(df), full_name=full_names) %>% left_join(geno_df, by="subject")
cond_df %>% filter(is.na(geno))
df = read.csv("Downloads/Liver_readcount_df.csv")
df = df %>% select(-one_of("X", "id", "Name")) %>% distinct(Description, .keep_all = T) %>%
column_to_rownames(var="Description")
full_names = gsub("\\.", "-", colnames(df))
colnames(df) = strsplit(colnames(df), "\\.") %>% sapply("[[", 2)
geno_df = read.csv("Downloads/pla2_samples.csv")
geno_df$subject = strsplit(geno_df$subject, "-") %>% sapply("[[", 2)
cond_df = data.frame(subject=colnames(df), full_name=full_names) %>% left_join(geno_df, by="subject")
cond_df %>% filter(is.na(geno))
files = paste0("Downloads/", c("getx_v8", "colon", "liver", "prost", "small_int", "adipose_vis", "colon_sig"), ".csv")
df_list = lapply(files, FUN=read.csv)
files = paste0("Downloads/", c("gtex_v8", "colon", "liver", "prost", "small_int", "adipose_vis", "colon_sig"), ".csv")
df_list = lapply(files, FUN=read.csv)
df_list
full_df = bind_rows(df_list)
full_df
full_df = bind_rows(df_list) %>% distinct(subject, .keep_all = T) %>% select(subject, rs11573156_GT) %>%
dplyr::rename(geno=rs11573156_GT)
full_df
write.csv(full_df, "pla2_samples.csv", row.names = F)
df = read.csv("Downloads/Liver_readcount_df.csv")
df = df %>% select(-one_of("X", "id", "Name")) %>% distinct(Description, .keep_all = T) %>%
column_to_rownames(var="Description")
full_names = gsub("\\.", "-", colnames(df))
colnames(df) = strsplit(colnames(df), "\\.") %>% sapply("[[", 2)
geno_df = read.csv("pla2_samples.csv")
geno_df$subject = strsplit(geno_df$subject, "-") %>% sapply("[[", 2)
cond_df = data.frame(subject=colnames(df), full_name=full_names) %>% left_join(geno_df, by="subject")
cond_df %>% filter(is.na(geno))
missing = cond_df %>% filter(is.na(geno)) %>% pull(full_name)
write(missing, "missing_geno.txt", sep="\n")
length(missing)
df = read.csv("Downloads/Liver_readcount_df.csv")
df = df %>% select(-one_of("X", "id", "Name")) %>% distinct(Description, .keep_all = T) %>%
column_to_rownames(var="Description")
full_names = gsub("\\.", "-", colnames(df))
colnames(df) = strsplit(colnames(df), "\\.") %>% sapply("[[", 2)
geno_df = read.csv("pla2_samples.csv")
geno_df$subject = strsplit(geno_df$subject, "-") %>% sapply("[[", 2)
cond_df = data.frame(subject=colnames(df), full_name=full_names) %>% inner_join(geno_df, by="subject")
cond_df
df = read.csv("Downloads/Liver_readcount_df.csv")
df = df %>% select(-one_of("X", "id", "Name")) %>% distinct(Description, .keep_all = T) %>%
column_to_rownames(var="Description")
full_names = gsub("\\.", "-", colnames(df))
colnames(df) = strsplit(colnames(df), "\\.") %>% sapply("[[", 2)
geno_df = read.csv("pla2_samples.csv")
geno_df$subject = strsplit(geno_df$subject, "-") %>% sapply("[[", 2)
cond_df = data.frame(subject=colnames(df), full_name=full_names) %>% inner_join(geno_df, by="subject") %>%
column_to_rownames(var="subject")
cond_df
df
df = df %>% select(rownames(cond_df))
df
des_df = normal_deseq(df, cond_df)
library(DESeq2)
des_df = normal_deseq(df, cond_df)
des_df
saveRDS(des_df, "pla2_vst.rds")
des_df["PLA2G2A",]
pla2_df = data.frame(pla2=des_df["PLA2G2A",],
sp1=des_df["SP1",],
geno=cond_df$geno)
pla2_df
as.vector(des_df["PLA2G2A",])
pla2_df = data.frame(pla2=as.numeric(des_df["PLA2G2A",]),
sp1=as.numeric(des_df["SP1",]),
geno=cond_df$geno)
pla2_df
library(ggplot2)
pla2_df %>%
ggplot(aes(pla2,sp1, color=geno)) +
geom_point(alpha=0.5, size=2) +
labs(y="SP1", x="PLA2G2A")
cond_df
pla2_df %>% group_by(geno) %>% group_split()
pla2_df %>% group_by(geno) %>%
group_split() %>%
lapply(FUN=function(x) cor(x$pla2, x$sp1))
cors = pla2_df %>% group_by(geno) %>%
group_split() %>%
lapply(FUN=function(x) cor(x$pla2, x$sp1))
genos = cors = pla2_df %>% group_by(geno) %>%
group_split() %>%
lapply(FUN=function(x) x$geno[1])
setNames(cors, genos)
cors = pla2_df %>% group_by(geno) %>%
group_split() %>%
lapply(FUN=function(x) cor(x$pla2, x$sp1))
genos = pla2_df %>% group_by(geno) %>%
group_split() %>%
lapply(FUN=function(x) x$geno[1])
cors = setNames(cors, genos)
cors
title = paste0("C/C cor: ", round(cors[["C/C"]], 2),
"\nG/C cor: ", round(cors[["G/C"]], 2),
"\nG/G cor: ", round(cors[["G/G"]], 2))
pla2_df %>%
ggplot(aes(pla2,sp1, color=geno)) +
geom_point(alpha=0.5, size=2) +
labs(y="SP1", x="PLA2G2A") +
ggtitle(title)
pla2_df %>%
ggplot(aes(pla2,sp1, color=geno)) +
geom_point(alpha=0.5, size=2) +
labs(y="SP1", x="PLA2G2A", subtitle=title) +
ggtitle("PLA2G2A vs SP1 VST Counts")
read.delim("featureCounts_REF_human.txt")
read.delim("featureCounts_files/featureCounts_REF_human.txt")
Sys.getenv("RSTUDIO_PANDOC")
setwd("QDSWorkflow/")
devtools::document()
rs_raw =readRDS("RS2_example_raw.rds")
rs_raw
setwd("QDSWorkflow/")
usethis::use_data(rs_raw, overwrite = T)
rs_ann =readRDS("RS2_ann.rds")
rs_ann
setwd("QDSWorkflow/")
usethis::use_data(rs_ann, overwrite = T)
devtools::document()
rs_ann =readRDS("RS2_ann.rds") %>% mutate(population_doublings=factor(population_doublings))
rs_ann
setwd("QDSWorkflow/")
usethis::use_data(rs_ann, overwrite = T)
devtools::document()
devtools::document()
devtools::document()
test_df = cell_aging_raw
test_ann = cell_aging_ann
test_df = FilterDoublets(df = test_df, ann_df = test_ann, split.by = "Condition", byvar="sample_id")
test_df = FilterDoublets(df = test_df, ann_df = test_ann, split.by = "Condition", byvar="sample_id")
devtools::document()
test_df = cell_aging_raw
test_ann = cell_aging_ann
test_df = FilterDoublets(df = test_df, ann_df = test_ann, split.by = "Condition", byvar="sample_id")
devtools::document()
test_df = cell_aging_raw
test_ann = cell_aging_ann
test_df = FilterDoublets(df = test_df, ann_df = test_ann, split.by = "Condition", byvar="sample_id")
devtools::document()
test_df = cell_aging_raw
test_ann = cell_aging_ann
test_df = FilterDoublets(df = test_df, ann_df = test_ann, split.by = "Condition", byvar="sample_id")
devtools::document()
test_df = cell_aging_raw
test_ann = cell_aging_ann
test_df = FilterDoublets(df = test_df, ann_df = test_ann, split.by = "Condition", byvar="sample_id")
