pe_map = which(pe_df$X1_join!=0)
r2_map = which(r2_df$X1_R2_adapt10!=0)
length(r2_map)
setdiff(r2_map, pe_map)
setdiff(pe_map, r2_map)
df = Reduce(inner_join, list(a, b, b2, c))
df
df = Reduce(inner_join, list(a, b, b2, c))
write.csv(df, "batch4_summary.csv", row.names = F)
df
df %>% filter(pe_val > r2_val)
df %>% filter(PE_sum > R2_sum)
df = read.csv("Downloads/Liver_readcount_df.csv")
df
df %>% filter(Description=="PLA2G2A" | Description=="SP1")
normal_deseq = function(full_df, cond_df) {
dds <- DESeqDataSetFromMatrix(countData = full_df, colData = cond_df, design = ~ 1)
vsd <- DESeq2::varianceStabilizingTransformation(dds)
vsd = as.data.frame(assay(vsd))
return(vsd)
}
library(tidyverse)
df %>% select(-one_of("X", "id", "Name")) %>% column_to_rownames(var="Description")
df %>% select(-one_of("X", "id", "Name")) %>% distinct(Description, .keep_all = T) %>%
column_to_rownames(var="Description")
cond_df = read.csv("Downloads/pla2_samples.csv")
cond_df
gsub("-", ".", "GTEX-1117F-0226-SM-5GZZ7")
cond_df = read.csv("Downloads/pla2_samples.csv") %>%
mutate(sample=gsub("-", ".", sample))
cond_df
cond_df = read.csv("Downloads/pla2_samples.csv") %>%
mutate(sample=gsub("-", ".", sample)) %>%
dplyr::slice(match(colnames(df), sample))
cond_df
cond_df = read.csv("Downloads/pla2_samples.csv") %>%
mutate(sample=gsub("-", ".", sample)) %>%
dplyr::slice(match(sample, colnames(df)))
cond_df
colnames(df)
cond_df$sample
cond_df = read.csv("Downloads/pla2_samples.csv") %>%
mutate(sample=gsub("-", ".", sample))
cond_df$sample
intersect(colnames(df), cond_df$sample)
df
cond_df = read.csv("Downloads/pla2_samples.csv")
cond_df
cond_df = read.csv("Downloads/pla2_samples.csv")
cond_df
cond_df %>% distinct(subject)
cond_df %>% filter(grepl("11DXZ", subject))
cond_df %>% filter(grepl("1117F", subject))
cond_df %>% filter(grepl("11EQ9", subject))
gsub(".", "-", "GTEX.11DXZ.0126.SM.5EGGY")
gsub("/.", "-", "GTEX.11DXZ.0126.SM.5EGGY")
gsub("\.", "-", "GTEX.11DXZ.0126.SM.5EGGY")
gsub("\\.", "-", "GTEX.11DXZ.0126.SM.5EGGY")
strsplit("GTEX-11DXZ-0126-SM-5EGGY", "\\.")
strsplit("GTEX.11DXZ.0126.SM.5EGGY", "\\.")
head(colnames(df))
df = df %>% select(-one_of("X", "id", "Name")) %>% distinct(Description, .keep_all = T) %>%
column_to_rownames(var="Description")
df = df %>% select(-one_of("X", "id", "Name")) %>% distinct(Description, .keep_all = T) %>%
head(colnames(df))
strsplit(colnames(df), ".\\")
strsplit(colnames(df), "\\.")
strsplit(colnames(df), "\\.") %>% sapply("[[", 1)
strsplit(colnames(df), "\\.") %>% sapply("[[", 2)
df = read.csv("Downloads/Liver_readcount_df.csv")
df = df %>% select(-one_of("X", "id", "Name")) %>% distinct(Description, .keep_all = T) %>%
column_to_rownames(var="Description")
colnames(df) = strsplit(colnames(df), "\\.") %>% sapply("[[", 2)
df
cond_df = read.csv("Downloads/pla2_samples.csv")
cond_df
cond_df = read.csv("Downloads/pla2_samples.csv")
cond_df$subject = strsplit(cond_df$subject, "-") %>% sapply("[[", 2)
cond_df
intersect(colnames(df), cond_df$subject)
setdiff(colnames(df), cond_df$subject)
setdiff(colnames(df), cond_df$subject) %>% length()
ncol(df)
setdiff(colnames(df), cond_df$subject) %>% length()
intersect(colnames(df), cond_df$subject) %>% length()
cond_df %>% dplyr::slice(match(colnames(df), subject))
geno_df = read.csv("Downloads/pla2_samples.csv")
geno_df$subject = strsplit(geno_df$subject, "-") %>% sapply("[[", 2)
cond_df = data.frame(subject=colnames(df))
left_join(cond_df, geno_df, by="subject")
cond_df = data.frame(subject=colnames(df)) %>% left_join(geno_df, by="subject")
cond_df
cond_df %>% filter(!is.na(geno))
cond_df %>% filter(is.na(geno))
df = read.csv("Downloads/Liver_readcount_df.csv")
df = df %>% select(-one_of("X", "id", "Name")) %>% distinct(Description, .keep_all = T) %>%
column_to_rownames(var="Description")
colnames(df) = gsub(".", "-", colnames(df))
df
df = read.csv("Downloads/Liver_readcount_df.csv")
df = df %>% select(-one_of("X", "id", "Name")) %>% distinct(Description, .keep_all = T) %>%
column_to_rownames(var="Description")
colnames(df) = gsub("\\.", "-", colnames(df))
df
missing = cond_df %>% filter(is.na(geno)) %>% pull(subject)
colnames(df)[grepl(subject, colnames(df))]
colnames(df)[grepl(missing, colnames(df))]
df = read.csv("Downloads/Liver_readcount_df.csv")
df = df %>% select(-one_of("X", "id", "Name")) %>% distinct(Description, .keep_all = T) %>%
column_to_rownames(var="Description")
full_names = colnames(df)
colnames(df) = strsplit(colnames(df), "\\.") %>% sapply("[[", 2)
geno_df = read.csv("Downloads/pla2_samples.csv")
geno_df$subject = strsplit(geno_df$subject, "-") %>% sapply("[[", 2)
cond_df = data.frame(subject=colnames(df), full_name=full_names) %>% left_join(geno_df, by="subject")
cond_df %>% filter(is.na(geno))
df = read.csv("Downloads/Liver_readcount_df.csv")
df = df %>% select(-one_of("X", "id", "Name")) %>% distinct(Description, .keep_all = T) %>%
column_to_rownames(var="Description")
full_names = gsub("\\.", "-", colnames(df))
colnames(df) = strsplit(colnames(df), "\\.") %>% sapply("[[", 2)
geno_df = read.csv("Downloads/pla2_samples.csv")
geno_df$subject = strsplit(geno_df$subject, "-") %>% sapply("[[", 2)
cond_df = data.frame(subject=colnames(df), full_name=full_names) %>% left_join(geno_df, by="subject")
cond_df %>% filter(is.na(geno))
missing = cond_df %>% filter(is.na(geno)) %>% pull(full_name)
write(missing, "missing_geno.txt", sep="\n")
cond_df = read.csv("Downloads/pla2_samples.csv")
cond_df
cond_df %>% distinct(subject)
df = read.csv("Downloads/Liver_readcount_df.csv")
df = df %>% select(-one_of("X", "id", "Name")) %>% distinct(Description, .keep_all = T) %>%
column_to_rownames(var="Description")
full_names = gsub("\\.", "-", colnames(df))
colnames(df) = strsplit(colnames(df), "\\.") %>% sapply("[[", 2)
geno_df = read.csv("Downloads/pla2_samples.csv")
geno_df$subject = strsplit(geno_df$subject, "-") %>% sapply("[[", 2)
cond_df = data.frame(subject=colnames(df), full_name=full_names) %>% left_join(geno_df, by="subject")
cond_df %>% filter(is.na(geno))
df = read.csv("Downloads/Liver_readcount_df.csv")
df = df %>% select(-one_of("X", "id", "Name")) %>% distinct(Description, .keep_all = T) %>%
column_to_rownames(var="Description")
full_names = gsub("\\.", "-", colnames(df))
colnames(df) = strsplit(colnames(df), "\\.") %>% sapply("[[", 2)
geno_df = read.csv("Downloads/pla2_samples.csv")
geno_df$subject = strsplit(geno_df$subject, "-") %>% sapply("[[", 2)
cond_df = data.frame(subject=colnames(df), full_name=full_names) %>% left_join(geno_df, by="subject")
cond_df %>% filter(is.na(geno))
files = paste0("Downloads/", c("getx_v8", "colon", "liver", "prost", "small_int", "adipose_vis", "colon_sig"), ".csv")
df_list = lapply(files, FUN=read.csv)
files = paste0("Downloads/", c("gtex_v8", "colon", "liver", "prost", "small_int", "adipose_vis", "colon_sig"), ".csv")
df_list = lapply(files, FUN=read.csv)
df_list
full_df = bind_rows(df_list)
full_df
full_df = bind_rows(df_list) %>% distinct(subject, .keep_all = T) %>% select(subject, rs11573156_GT) %>%
dplyr::rename(geno=rs11573156_GT)
full_df
write.csv(full_df, "pla2_samples.csv", row.names = F)
df = read.csv("Downloads/Liver_readcount_df.csv")
df = df %>% select(-one_of("X", "id", "Name")) %>% distinct(Description, .keep_all = T) %>%
column_to_rownames(var="Description")
full_names = gsub("\\.", "-", colnames(df))
colnames(df) = strsplit(colnames(df), "\\.") %>% sapply("[[", 2)
geno_df = read.csv("pla2_samples.csv")
geno_df$subject = strsplit(geno_df$subject, "-") %>% sapply("[[", 2)
cond_df = data.frame(subject=colnames(df), full_name=full_names) %>% left_join(geno_df, by="subject")
cond_df %>% filter(is.na(geno))
missing = cond_df %>% filter(is.na(geno)) %>% pull(full_name)
write(missing, "missing_geno.txt", sep="\n")
length(missing)
df = read.csv("Downloads/Liver_readcount_df.csv")
df = df %>% select(-one_of("X", "id", "Name")) %>% distinct(Description, .keep_all = T) %>%
column_to_rownames(var="Description")
full_names = gsub("\\.", "-", colnames(df))
colnames(df) = strsplit(colnames(df), "\\.") %>% sapply("[[", 2)
geno_df = read.csv("pla2_samples.csv")
geno_df$subject = strsplit(geno_df$subject, "-") %>% sapply("[[", 2)
cond_df = data.frame(subject=colnames(df), full_name=full_names) %>% inner_join(geno_df, by="subject")
cond_df
df = read.csv("Downloads/Liver_readcount_df.csv")
df = df %>% select(-one_of("X", "id", "Name")) %>% distinct(Description, .keep_all = T) %>%
column_to_rownames(var="Description")
full_names = gsub("\\.", "-", colnames(df))
colnames(df) = strsplit(colnames(df), "\\.") %>% sapply("[[", 2)
geno_df = read.csv("pla2_samples.csv")
geno_df$subject = strsplit(geno_df$subject, "-") %>% sapply("[[", 2)
cond_df = data.frame(subject=colnames(df), full_name=full_names) %>% inner_join(geno_df, by="subject") %>%
column_to_rownames(var="subject")
cond_df
df
df = df %>% select(rownames(cond_df))
df
des_df = normal_deseq(df, cond_df)
library(DESeq2)
des_df = normal_deseq(df, cond_df)
des_df
saveRDS(des_df, "pla2_vst.rds")
des_df["PLA2G2A",]
pla2_df = data.frame(pla2=des_df["PLA2G2A",],
sp1=des_df["SP1",],
geno=cond_df$geno)
pla2_df
as.vector(des_df["PLA2G2A",])
pla2_df = data.frame(pla2=as.numeric(des_df["PLA2G2A",]),
sp1=as.numeric(des_df["SP1",]),
geno=cond_df$geno)
pla2_df
library(ggplot2)
pla2_df %>%
ggplot(aes(pla2,sp1, color=geno)) +
geom_point(alpha=0.5, size=2) +
labs(y="SP1", x="PLA2G2A")
cond_df
pla2_df %>% group_by(geno) %>% group_split()
pla2_df %>% group_by(geno) %>%
group_split() %>%
lapply(FUN=function(x) cor(x$pla2, x$sp1))
cors = pla2_df %>% group_by(geno) %>%
group_split() %>%
lapply(FUN=function(x) cor(x$pla2, x$sp1))
genos = cors = pla2_df %>% group_by(geno) %>%
group_split() %>%
lapply(FUN=function(x) x$geno[1])
setNames(cors, genos)
cors = pla2_df %>% group_by(geno) %>%
group_split() %>%
lapply(FUN=function(x) cor(x$pla2, x$sp1))
genos = pla2_df %>% group_by(geno) %>%
group_split() %>%
lapply(FUN=function(x) x$geno[1])
cors = setNames(cors, genos)
cors
title = paste0("C/C cor: ", round(cors[["C/C"]], 2),
"\nG/C cor: ", round(cors[["G/C"]], 2),
"\nG/G cor: ", round(cors[["G/G"]], 2))
pla2_df %>%
ggplot(aes(pla2,sp1, color=geno)) +
geom_point(alpha=0.5, size=2) +
labs(y="SP1", x="PLA2G2A") +
ggtitle(title)
pla2_df %>%
ggplot(aes(pla2,sp1, color=geno)) +
geom_point(alpha=0.5, size=2) +
labs(y="SP1", x="PLA2G2A", subtitle=title) +
ggtitle("PLA2G2A vs SP1 VST Counts")
read.delim("featureCounts_REF_human.txt")
read.delim("featureCounts_files/featureCounts_REF_human.txt")
Sys.getenv("RSTUDIO_PANDOC")
setwd("QDSWorkflow/")
devtools::load_all()
devtools::document()
format_cols
cell-aging_raw = readRDS("tang_raw.rds")
cell_aging_raw = readRDS("tang_raw.rds")
setwd("QDSWorkflow/")
usethis::use_data(cell_aging_raw)
cell_aging_raw = readRDS("tang_raw_example.rds")
setwd("QDSWorkflow/")
usethis::use_data(cell_aging_raw, overwrite = T)
cell_aging_ann =data.table::fread("tang_ann_example.txt")
setwd("QDSWorkflow/")
usethis::use_data(cell_aging_ann, overwrite = T)
cell_aging_genemap =data.table::fread("tang_genemap_example.csv")
setwd("QDSWorkflow/")
usethis::use_data(cell_aging_genemap, overwrite = T)
cell_aging_genemap
cell_aging_genemap =data.table::fread("tang_genemap_example.csv")
setwd("QDSWorkflow/")
usethis::use_data(cell_aging_genemap, overwrite = T)
rs_raw =data.table::fread("RS2_example_raw.rds")
setwd("QDSWorkflow/")
usethis::use_data(rs_raw, overwrite = T)
rs_ann =data.table::fread("RS2_example_raw.rds")
setwd("QDSWorkflow/")
usethis::use_data(rs_ann, overwrite = T)
make_grouped_hist = function(pred_df, ann_df, grouping1, grouping2=NULL, n_bin=10,
byvar=c("sample_id"="sample_id"), title=NULL, levels=NULL) {
pred_df = inner_join(pred_df, ann_df, by=byvar)
if (!is.null(levels)) {
pred_df[[grouping1]] = factor(pred_df[[grouping1]], ordered=T, levels=levels)
}
if (is.null(grouping2)) {
grouping2="bin"
pred_df$bin = sample(seq(1, n_bin), nrow(pred_df), replace = T) %>% as.character()
}
modes = pred_df %>% group_by(!!sym(grouping1), !!sym(grouping2)) %>%
group_split() %>%
lapply(FUN=function(x) {
cond = x %>% pull(!!sym(grouping1)) %>% unique()
mode_idx = which.max(density(x$QDS)$y)
mode = density(x$QDS)$x[mode_idx]
df = data.frame(Condition=cond, QDS_mode=mode)
colnames(df)[1] = grouping1
return(df)
})
modes_df = bind_rows(modes) %>% group_by(!!sym(grouping1)) %>% summarise(QDS_mod_med=median(QDS_mode))
p = ggplot(pred_df, aes(x=QDS, fill=NULL, group=!!sym(grouping2)))+
geom_density(adjust=1.5, alpha=.4) +
geom_vline(data=modes_df, mapping=aes(xintercept=QDS_mod_med), color="red") +
facet_wrap(as.formula(paste("~", grouping1)), ncol=1) +
ggtitle(title)
return(p)
}
qds_df = readRDS("tang_example_qds.rds")
make_grouped_hist(qds_df, cell_aging_ann, grouping1 = "Condition")
make_grouped_hist = function(pred_df, ann_df, grouping1, grouping2=NULL, n_bin=10,
byvar=c("sample_id"="sample_id"), title=NULL, levels=NULL) {
pred_df = inner_join(pred_df, ann_df, by=byvar)
if (!is.null(levels)) {
pred_df[[grouping1]] = factor(pred_df[[grouping1]], ordered=T, levels=levels)
}
if (is.null(grouping2)) {
grouping2="bin"
pred_df$bin = sample(seq(1, n_bin), nrow(pred_df), replace = T) %>% as.character()
}
modes = pred_df %>% group_by(!!sym(grouping1), !!sym(grouping2)) %>%
group_split() %>%
lapply(FUN=function(x) {
print(x)
cond = x %>% pull(!!sym(grouping1)) %>% unique()
mode_idx = which.max(density(x$QDS)$y)
mode = density(x$QDS)$x[mode_idx]
df = data.frame(Condition=cond, QDS_mode=mode)
colnames(df)[1] = grouping1
return(df)
})
modes_df = bind_rows(modes) %>% group_by(!!sym(grouping1)) %>% summarise(QDS_mod_med=median(QDS_mode))
p = ggplot(pred_df, aes(x=QDS, fill=NULL, group=!!sym(grouping2)))+
geom_density(adjust=1.5, alpha=.4) +
geom_vline(data=modes_df, mapping=aes(xintercept=QDS_mod_med), color="red") +
facet_wrap(as.formula(paste("~", grouping1)), ncol=1) +
ggtitle(title)
return(p)
}
make_grouped_hist(qds_df, cell_aging_ann, grouping1 = "Condition")
qds_df
qds_df = readRDS("tang_QDS_pred.rds")
qds_df
make_grouped_hist(qds_df, cell_aging_ann, grouping1 = "Condition")
qds_df = readRDS("tang_QDS_pred.rds")
qds_df
make_grouped_hist(qds_df, cell_aging_ann, grouping1 = "Condition", levels=c("LowPD", "HighPD", "Sen"))
qds_df = readRDS("tang_QDS_pred.rds")
qds_df
make_grouped_hist(qds_df, cell_aging_ann, grouping1 = "Condition", levels=c("LowPD", "HighPD", "Sen"),
title="QDS density curves of cell aging dataset")
make_grouped_hist = function(pred_df, ann_df, grouping1, xvar="QDS", grouping2=NULL, n_bin=10,
byvar=c("sample_id"="sample_id"), title=NULL, levels=NULL) {
pred_df = inner_join(pred_df, ann_df, by=byvar)
if (!is.null(levels)) {
pred_df[[grouping1]] = factor(pred_df[[grouping1]], ordered=T, levels=levels)
}
if (is.null(grouping2)) {
p = ggplot(pred_df, aes(x=!!sym(xvar), fill=NULL, group=!!sym(grouping2)))+
geom_density(adjust=1.5, alpha=.4) +
geom_vline(data=modes_df, mapping=aes(xintercept=QDS_mod_med), color="red") +
facet_wrap(as.formula(paste("~", grouping1)), ncol=1) +
ggtitle(title)
return(p)
}
modes = pred_df %>% group_by(!!sym(grouping1), !!sym(grouping2)) %>%
group_split() %>%
lapply(FUN=function(x) {
cond = x %>% pull(!!sym(grouping1)) %>% unique()
mode_idx = which.max(density(x[[xvar]])$y)
mode = density(x[[xvar]])$x[mode_idx]
df = data.frame(Condition=cond, QDS_mode=mode)
colnames(df)[1] = grouping1
return(df)
})
modes_df = bind_rows(modes) %>% group_by(!!sym(grouping1)) %>% summarise(QDS_mod_med=median(QDS_mode))
p = ggplot(pred_df, aes(x=!!sym(xvar), fill=NULL, group=!!sym(grouping2)))+
geom_density(adjust=1.5, alpha=.4) +
geom_vline(data=modes_df, mapping=aes(xintercept=QDS_mod_med), color="red") +
facet_wrap(as.formula(paste("~", grouping1)), ncol=1) +
ggtitle(title)
return(p)
}
qds_df = readRDS("tang_QDS_pred.rds")
make_grouped_hist(qds_df, cell_aging_ann, grouping1 = "Condition", levels=c("LowPD", "HighPD", "Sen"),
title="QDS density curves of cell aging dataset")
make_grouped_hist = function(pred_df, ann_df, grouping1, xvar="QDS", grouping2=NULL, n_bin=10,
byvar=c("sample_id"="sample_id"), title=NULL, levels=NULL) {
pred_df = inner_join(pred_df, ann_df, by=byvar)
if (!is.null(levels)) {
pred_df[[grouping1]] = factor(pred_df[[grouping1]], ordered=T, levels=levels)
}
if (is.null(grouping2)) {
p = ggplot(pred_df, aes(x=!!sym(xvar), fill=NULL, group=!!sym(grouping1)))+
geom_density(adjust=1.5, alpha=.4) +
ggtitle(title)
return(p)
}
modes = pred_df %>% group_by(!!sym(grouping1), !!sym(grouping2)) %>%
group_split() %>%
lapply(FUN=function(x) {
cond = x %>% pull(!!sym(grouping1)) %>% unique()
mode_idx = which.max(density(x[[xvar]])$y)
mode = density(x[[xvar]])$x[mode_idx]
df = data.frame(Condition=cond, QDS_mode=mode)
colnames(df)[1] = grouping1
return(df)
})
modes_df = bind_rows(modes) %>% group_by(!!sym(grouping1)) %>% summarise(QDS_mod_med=median(QDS_mode))
p = ggplot(pred_df, aes(x=!!sym(xvar), fill=NULL, group=!!sym(grouping2)))+
geom_density(adjust=1.5, alpha=.4) +
geom_vline(data=modes_df, mapping=aes(xintercept=QDS_mod_med), color="red") +
facet_wrap(as.formula(paste("~", grouping1)), ncol=1) +
ggtitle(title)
return(p)
}
make_grouped_hist(qds_df, cell_aging_ann, grouping1 = "Condition", levels=c("LowPD", "HighPD", "Sen"),
title="QDS density curves of cell aging dataset")
make_grouped_hist = function(pred_df, ann_df, grouping1, xvar="QDS", grouping2=NULL, n_bin=10,
byvar=c("sample_id"="sample_id"), title=NULL, levels=NULL) {
pred_df = inner_join(pred_df, ann_df, by=byvar)
if (!is.null(levels)) {
pred_df[[grouping1]] = factor(pred_df[[grouping1]], ordered=T, levels=levels)
}
if (is.null(grouping2)) {
p = ggplot(pred_df, aes(x=!!sym(xvar), fill=NULL, group=!!sym(grouping1), color=!!sym(grouping1)))+
geom_density(adjust=1.5, alpha=.4) +
ggtitle(title)
return(p)
}
modes = pred_df %>% group_by(!!sym(grouping1), !!sym(grouping2)) %>%
group_split() %>%
lapply(FUN=function(x) {
cond = x %>% pull(!!sym(grouping1)) %>% unique()
mode_idx = which.max(density(x[[xvar]])$y)
mode = density(x[[xvar]])$x[mode_idx]
df = data.frame(Condition=cond, QDS_mode=mode)
colnames(df)[1] = grouping1
return(df)
})
modes_df = bind_rows(modes) %>% group_by(!!sym(grouping1)) %>% summarise(QDS_mod_med=median(QDS_mode))
p = ggplot(pred_df, aes(x=!!sym(xvar), fill=NULL, group=!!sym(grouping2)))+
geom_density(adjust=1.5, alpha=.4) +
geom_vline(data=modes_df, mapping=aes(xintercept=QDS_mod_med), color="red") +
facet_wrap(as.formula(paste("~", grouping1)), ncol=1) +
ggtitle(title)
return(p)
}
make_grouped_hist(qds_df, cell_aging_ann, grouping1 = "Condition", levels=c("LowPD", "HighPD", "Sen"),
title="QDS density curves of cell aging dataset")
make_grouped_hist = function(pred_df, ann_df, grouping1, xvar="QDS", grouping2=NULL, n_bin=10,
byvar=c("sample_id"="sample_id"), title=NULL, levels=NULL) {
pred_df = inner_join(pred_df, ann_df, by=byvar)
if (!is.null(levels)) {
pred_df[[grouping1]] = factor(pred_df[[grouping1]], ordered=T, levels=levels)
}
if (is.null(grouping2)) {
p = ggplot(pred_df, aes(x=!!sym(xvar), fill=NULL, group=!!sym(grouping1), color=!!sym(grouping1), fill=!!sym(grouping1)))+
geom_density(adjust=1.5, alpha=.4) +
ggtitle(title)
return(p)
}
modes = pred_df %>% group_by(!!sym(grouping1), !!sym(grouping2)) %>%
group_split() %>%
lapply(FUN=function(x) {
cond = x %>% pull(!!sym(grouping1)) %>% unique()
mode_idx = which.max(density(x[[xvar]])$y)
mode = density(x[[xvar]])$x[mode_idx]
df = data.frame(Condition=cond, QDS_mode=mode)
colnames(df)[1] = grouping1
return(df)
})
modes_df = bind_rows(modes) %>% group_by(!!sym(grouping1)) %>% summarise(QDS_mod_med=median(QDS_mode))
p = ggplot(pred_df, aes(x=!!sym(xvar), fill=NULL, group=!!sym(grouping2)))+
geom_density(adjust=1.5, alpha=.4) +
geom_vline(data=modes_df, mapping=aes(xintercept=QDS_mod_med), color="red") +
facet_wrap(as.formula(paste("~", grouping1)), ncol=1) +
ggtitle(title)
return(p)
}
make_grouped_hist(qds_df, cell_aging_ann, grouping1 = "Condition", levels=c("LowPD", "HighPD", "Sen"),
title="QDS density curves of cell aging dataset")
make_grouped_hist = function(pred_df, ann_df, grouping1, xvar="QDS", grouping2=NULL, n_bin=10,
byvar=c("sample_id"="sample_id"), title=NULL, levels=NULL) {
pred_df = inner_join(pred_df, ann_df, by=byvar)
if (!is.null(levels)) {
pred_df[[grouping1]] = factor(pred_df[[grouping1]], ordered=T, levels=levels)
}
if (is.null(grouping2)) {
p = ggplot(pred_df, aes(x=!!sym(xvar), group=!!sym(grouping1), color=!!sym(grouping1), fill=!!sym(grouping1)))+
geom_density(adjust=1.5, alpha=.4) +
ggtitle(title)
return(p)
}
modes = pred_df %>% group_by(!!sym(grouping1), !!sym(grouping2)) %>%
group_split() %>%
lapply(FUN=function(x) {
cond = x %>% pull(!!sym(grouping1)) %>% unique()
mode_idx = which.max(density(x[[xvar]])$y)
mode = density(x[[xvar]])$x[mode_idx]
df = data.frame(Condition=cond, QDS_mode=mode)
colnames(df)[1] = grouping1
return(df)
})
modes_df = bind_rows(modes) %>% group_by(!!sym(grouping1)) %>% summarise(QDS_mod_med=median(QDS_mode))
p = ggplot(pred_df, aes(x=!!sym(xvar), fill=NULL, group=!!sym(grouping2)))+
geom_density(adjust=1.5, alpha=.4) +
geom_vline(data=modes_df, mapping=aes(xintercept=QDS_mod_med), color="red") +
facet_wrap(as.formula(paste("~", grouping1)), ncol=1) +
ggtitle(title)
return(p)
}
make_grouped_hist(qds_df, cell_aging_ann, grouping1 = "Condition", levels=c("LowPD", "HighPD", "Sen"),
title="QDS density curves of cell aging dataset")
devtools::document()
?FilterDoublets
