colSums(r1_raw[,c(-1,-2)])
r1_raw
c = read.csv("Downloads/batch4_PE_R2Adapt_counts.csv")
c
c = read.csv("r1_r2_pe_mapped_counts.csv")
c
Reduce(inner_join, list(a, b, b2, c), by="sample")
Reduce(inner_join, list(a, b, b2, c))
pe_df = read.csv("Downloads/batch4_PE_R2Adapt_counts.csv")
r2_df = read.csv("Downloads/batch4_R2_SE_raw.csv")
r2_df
pe_df = read.csv("Downloads/batch4_PE_R2Adapt_counts.csv")
r2_df = read.csv("Downloads/batch4_R2_SE_raw.csv")
r2_df
pe_df = read.csv("Downloads/batch4_PE_R2Adapt_counts.csv")
r2_df = read.csv("Downloads/batch4_R2_SE_raw.csv")
pe_map = which(pe_df$X1_join!=0)
r2_map = which(r2_df$X1_join!=0)
length(pe_map)
length(r2_map)
pe_df = read.csv("Downloads/batch4_PE_R2Adapt_counts.csv")
r2_df = read.csv("Downloads/batch4_R2_SE_raw.csv")
pe_map = which(pe_df$X1_join!=0)
r2_map = which(r2_df$X1_R2_adapt10!=0)
length(r2_map)
setdiff(r2_map, pe_map)
setdiff(pe_map, r2_map)
df = Reduce(inner_join, list(a, b, b2, c))
df
df = Reduce(inner_join, list(a, b, b2, c))
write.csv(df, "batch4_summary.csv", row.names = F)
df
df %>% filter(pe_val > r2_val)
df %>% filter(PE_sum > R2_sum)
df = read.csv("Downloads/Liver_readcount_df.csv")
df
df %>% filter(Description=="PLA2G2A" | Description=="SP1")
normal_deseq = function(full_df, cond_df) {
dds <- DESeqDataSetFromMatrix(countData = full_df, colData = cond_df, design = ~ 1)
vsd <- DESeq2::varianceStabilizingTransformation(dds)
vsd = as.data.frame(assay(vsd))
return(vsd)
}
library(tidyverse)
df %>% select(-one_of("X", "id", "Name")) %>% column_to_rownames(var="Description")
df %>% select(-one_of("X", "id", "Name")) %>% distinct(Description, .keep_all = T) %>%
column_to_rownames(var="Description")
cond_df = read.csv("Downloads/pla2_samples.csv")
cond_df
gsub("-", ".", "GTEX-1117F-0226-SM-5GZZ7")
cond_df = read.csv("Downloads/pla2_samples.csv") %>%
mutate(sample=gsub("-", ".", sample))
cond_df
cond_df = read.csv("Downloads/pla2_samples.csv") %>%
mutate(sample=gsub("-", ".", sample)) %>%
dplyr::slice(match(colnames(df), sample))
cond_df
cond_df = read.csv("Downloads/pla2_samples.csv") %>%
mutate(sample=gsub("-", ".", sample)) %>%
dplyr::slice(match(sample, colnames(df)))
cond_df
colnames(df)
cond_df$sample
cond_df = read.csv("Downloads/pla2_samples.csv") %>%
mutate(sample=gsub("-", ".", sample))
cond_df$sample
intersect(colnames(df), cond_df$sample)
df
cond_df = read.csv("Downloads/pla2_samples.csv")
cond_df
cond_df = read.csv("Downloads/pla2_samples.csv")
cond_df
cond_df %>% distinct(subject)
cond_df %>% filter(grepl("11DXZ", subject))
cond_df %>% filter(grepl("1117F", subject))
cond_df %>% filter(grepl("11EQ9", subject))
gsub(".", "-", "GTEX.11DXZ.0126.SM.5EGGY")
gsub("/.", "-", "GTEX.11DXZ.0126.SM.5EGGY")
gsub("\.", "-", "GTEX.11DXZ.0126.SM.5EGGY")
gsub("\\.", "-", "GTEX.11DXZ.0126.SM.5EGGY")
strsplit("GTEX-11DXZ-0126-SM-5EGGY", "\\.")
strsplit("GTEX.11DXZ.0126.SM.5EGGY", "\\.")
head(colnames(df))
df = df %>% select(-one_of("X", "id", "Name")) %>% distinct(Description, .keep_all = T) %>%
column_to_rownames(var="Description")
df = df %>% select(-one_of("X", "id", "Name")) %>% distinct(Description, .keep_all = T) %>%
head(colnames(df))
strsplit(colnames(df), ".\\")
strsplit(colnames(df), "\\.")
strsplit(colnames(df), "\\.") %>% sapply("[[", 1)
strsplit(colnames(df), "\\.") %>% sapply("[[", 2)
df = read.csv("Downloads/Liver_readcount_df.csv")
df = df %>% select(-one_of("X", "id", "Name")) %>% distinct(Description, .keep_all = T) %>%
column_to_rownames(var="Description")
colnames(df) = strsplit(colnames(df), "\\.") %>% sapply("[[", 2)
df
cond_df = read.csv("Downloads/pla2_samples.csv")
cond_df
cond_df = read.csv("Downloads/pla2_samples.csv")
cond_df$subject = strsplit(cond_df$subject, "-") %>% sapply("[[", 2)
cond_df
intersect(colnames(df), cond_df$subject)
setdiff(colnames(df), cond_df$subject)
setdiff(colnames(df), cond_df$subject) %>% length()
ncol(df)
setdiff(colnames(df), cond_df$subject) %>% length()
intersect(colnames(df), cond_df$subject) %>% length()
cond_df %>% dplyr::slice(match(colnames(df), subject))
geno_df = read.csv("Downloads/pla2_samples.csv")
geno_df$subject = strsplit(geno_df$subject, "-") %>% sapply("[[", 2)
cond_df = data.frame(subject=colnames(df))
left_join(cond_df, geno_df, by="subject")
cond_df = data.frame(subject=colnames(df)) %>% left_join(geno_df, by="subject")
cond_df
cond_df %>% filter(!is.na(geno))
cond_df %>% filter(is.na(geno))
df = read.csv("Downloads/Liver_readcount_df.csv")
df = df %>% select(-one_of("X", "id", "Name")) %>% distinct(Description, .keep_all = T) %>%
column_to_rownames(var="Description")
colnames(df) = gsub(".", "-", colnames(df))
df
df = read.csv("Downloads/Liver_readcount_df.csv")
df = df %>% select(-one_of("X", "id", "Name")) %>% distinct(Description, .keep_all = T) %>%
column_to_rownames(var="Description")
colnames(df) = gsub("\\.", "-", colnames(df))
df
missing = cond_df %>% filter(is.na(geno)) %>% pull(subject)
colnames(df)[grepl(subject, colnames(df))]
colnames(df)[grepl(missing, colnames(df))]
df = read.csv("Downloads/Liver_readcount_df.csv")
df = df %>% select(-one_of("X", "id", "Name")) %>% distinct(Description, .keep_all = T) %>%
column_to_rownames(var="Description")
full_names = colnames(df)
colnames(df) = strsplit(colnames(df), "\\.") %>% sapply("[[", 2)
geno_df = read.csv("Downloads/pla2_samples.csv")
geno_df$subject = strsplit(geno_df$subject, "-") %>% sapply("[[", 2)
cond_df = data.frame(subject=colnames(df), full_name=full_names) %>% left_join(geno_df, by="subject")
cond_df %>% filter(is.na(geno))
df = read.csv("Downloads/Liver_readcount_df.csv")
df = df %>% select(-one_of("X", "id", "Name")) %>% distinct(Description, .keep_all = T) %>%
column_to_rownames(var="Description")
full_names = gsub("\\.", "-", colnames(df))
colnames(df) = strsplit(colnames(df), "\\.") %>% sapply("[[", 2)
geno_df = read.csv("Downloads/pla2_samples.csv")
geno_df$subject = strsplit(geno_df$subject, "-") %>% sapply("[[", 2)
cond_df = data.frame(subject=colnames(df), full_name=full_names) %>% left_join(geno_df, by="subject")
cond_df %>% filter(is.na(geno))
missing = cond_df %>% filter(is.na(geno)) %>% pull(full_name)
write(missing, "missing_geno.txt", sep="\n")
cond_df = read.csv("Downloads/pla2_samples.csv")
cond_df
cond_df %>% distinct(subject)
df = read.csv("Downloads/Liver_readcount_df.csv")
df = df %>% select(-one_of("X", "id", "Name")) %>% distinct(Description, .keep_all = T) %>%
column_to_rownames(var="Description")
full_names = gsub("\\.", "-", colnames(df))
colnames(df) = strsplit(colnames(df), "\\.") %>% sapply("[[", 2)
geno_df = read.csv("Downloads/pla2_samples.csv")
geno_df$subject = strsplit(geno_df$subject, "-") %>% sapply("[[", 2)
cond_df = data.frame(subject=colnames(df), full_name=full_names) %>% left_join(geno_df, by="subject")
cond_df %>% filter(is.na(geno))
df = read.csv("Downloads/Liver_readcount_df.csv")
df = df %>% select(-one_of("X", "id", "Name")) %>% distinct(Description, .keep_all = T) %>%
column_to_rownames(var="Description")
full_names = gsub("\\.", "-", colnames(df))
colnames(df) = strsplit(colnames(df), "\\.") %>% sapply("[[", 2)
geno_df = read.csv("Downloads/pla2_samples.csv")
geno_df$subject = strsplit(geno_df$subject, "-") %>% sapply("[[", 2)
cond_df = data.frame(subject=colnames(df), full_name=full_names) %>% left_join(geno_df, by="subject")
cond_df %>% filter(is.na(geno))
files = paste0("Downloads/", c("getx_v8", "colon", "liver", "prost", "small_int", "adipose_vis", "colon_sig"), ".csv")
df_list = lapply(files, FUN=read.csv)
files = paste0("Downloads/", c("gtex_v8", "colon", "liver", "prost", "small_int", "adipose_vis", "colon_sig"), ".csv")
df_list = lapply(files, FUN=read.csv)
df_list
full_df = bind_rows(df_list)
full_df
full_df = bind_rows(df_list) %>% distinct(subject, .keep_all = T) %>% select(subject, rs11573156_GT) %>%
dplyr::rename(geno=rs11573156_GT)
full_df
write.csv(full_df, "pla2_samples.csv", row.names = F)
df = read.csv("Downloads/Liver_readcount_df.csv")
df = df %>% select(-one_of("X", "id", "Name")) %>% distinct(Description, .keep_all = T) %>%
column_to_rownames(var="Description")
full_names = gsub("\\.", "-", colnames(df))
colnames(df) = strsplit(colnames(df), "\\.") %>% sapply("[[", 2)
geno_df = read.csv("pla2_samples.csv")
geno_df$subject = strsplit(geno_df$subject, "-") %>% sapply("[[", 2)
cond_df = data.frame(subject=colnames(df), full_name=full_names) %>% left_join(geno_df, by="subject")
cond_df %>% filter(is.na(geno))
missing = cond_df %>% filter(is.na(geno)) %>% pull(full_name)
write(missing, "missing_geno.txt", sep="\n")
length(missing)
df = read.csv("Downloads/Liver_readcount_df.csv")
df = df %>% select(-one_of("X", "id", "Name")) %>% distinct(Description, .keep_all = T) %>%
column_to_rownames(var="Description")
full_names = gsub("\\.", "-", colnames(df))
colnames(df) = strsplit(colnames(df), "\\.") %>% sapply("[[", 2)
geno_df = read.csv("pla2_samples.csv")
geno_df$subject = strsplit(geno_df$subject, "-") %>% sapply("[[", 2)
cond_df = data.frame(subject=colnames(df), full_name=full_names) %>% inner_join(geno_df, by="subject")
cond_df
df = read.csv("Downloads/Liver_readcount_df.csv")
df = df %>% select(-one_of("X", "id", "Name")) %>% distinct(Description, .keep_all = T) %>%
column_to_rownames(var="Description")
full_names = gsub("\\.", "-", colnames(df))
colnames(df) = strsplit(colnames(df), "\\.") %>% sapply("[[", 2)
geno_df = read.csv("pla2_samples.csv")
geno_df$subject = strsplit(geno_df$subject, "-") %>% sapply("[[", 2)
cond_df = data.frame(subject=colnames(df), full_name=full_names) %>% inner_join(geno_df, by="subject") %>%
column_to_rownames(var="subject")
cond_df
df
df = df %>% select(rownames(cond_df))
df
des_df = normal_deseq(df, cond_df)
library(DESeq2)
des_df = normal_deseq(df, cond_df)
des_df
saveRDS(des_df, "pla2_vst.rds")
des_df["PLA2G2A",]
pla2_df = data.frame(pla2=des_df["PLA2G2A",],
sp1=des_df["SP1",],
geno=cond_df$geno)
pla2_df
as.vector(des_df["PLA2G2A",])
pla2_df = data.frame(pla2=as.numeric(des_df["PLA2G2A",]),
sp1=as.numeric(des_df["SP1",]),
geno=cond_df$geno)
pla2_df
library(ggplot2)
pla2_df %>%
ggplot(aes(pla2,sp1, color=geno)) +
geom_point(alpha=0.5, size=2) +
labs(y="SP1", x="PLA2G2A")
cond_df
pla2_df %>% group_by(geno) %>% group_split()
pla2_df %>% group_by(geno) %>%
group_split() %>%
lapply(FUN=function(x) cor(x$pla2, x$sp1))
cors = pla2_df %>% group_by(geno) %>%
group_split() %>%
lapply(FUN=function(x) cor(x$pla2, x$sp1))
genos = cors = pla2_df %>% group_by(geno) %>%
group_split() %>%
lapply(FUN=function(x) x$geno[1])
setNames(cors, genos)
cors = pla2_df %>% group_by(geno) %>%
group_split() %>%
lapply(FUN=function(x) cor(x$pla2, x$sp1))
genos = pla2_df %>% group_by(geno) %>%
group_split() %>%
lapply(FUN=function(x) x$geno[1])
cors = setNames(cors, genos)
cors
title = paste0("C/C cor: ", round(cors[["C/C"]], 2),
"\nG/C cor: ", round(cors[["G/C"]], 2),
"\nG/G cor: ", round(cors[["G/G"]], 2))
pla2_df %>%
ggplot(aes(pla2,sp1, color=geno)) +
geom_point(alpha=0.5, size=2) +
labs(y="SP1", x="PLA2G2A") +
ggtitle(title)
pla2_df %>%
ggplot(aes(pla2,sp1, color=geno)) +
geom_point(alpha=0.5, size=2) +
labs(y="SP1", x="PLA2G2A", subtitle=title) +
ggtitle("PLA2G2A vs SP1 VST Counts")
read.delim("featureCounts_REF_human.txt")
read.delim("featureCounts_files/featureCounts_REF_human.txt")
install.packages("devtools")
install.packages("devtools")
devtools::create("QDSWorkflow")
devtools::load_all()
getwd()
setwd("QDSWorkflow/")
devtools::load_all()
.rs.restartR()
setwd("QDSWorkflow/")
getwd()
devtools::load_all()
df = data.table::fread("Downloads/featureCounts_REF_human_d2d16.txt") %>%
distinct(Geneid, .keep_all=T) %>%
column_to_rownames(var="Geneid")
devtools::load_all()
df = data.table::fread("Downloads/featureCounts_REF_human_d2d16.txt") %>%
distinct(Geneid, .keep_all=T) %>%
column_to_rownames(var="Geneid")
data.table::fread("Downloads/featureCounts_REF_human_d2d16.txt")
df = data.table::fread("Downloads/featureCounts_REF_human_d2d16.txt") %>%
distinct(V1, .keep_all=T) %>%
column_to_rownames(var="V1")
ann_df = data.table::fread("REF_ann_withDay.txt")
normal_deseq(df, ann_df)
df = data.table::fread("Downloads/featureCounts_REF_human_d2d16.txt") %>%
distinct(V1, .keep_all=T) %>%
column_to_rownames(var="V1")
ann_df = data.table::fread("REF_ann_withDay.txt") %>% filter(Day!=0)
normal_deseq(df, ann_df)
devtools::load_all()
devtools::load_all()
df = data.table::fread("Downloads/featureCounts_REF_human_d2d16.txt") %>%
distinct(V1, .keep_all=T) %>%
column_to_rownames(var="V1")
ann_df = data.table::fread("REF_ann_withDay.txt") %>% filter(Day!=0)
MakeHist(df, ann_df)
devtools::load_all()
MakeHist(df, ann_df)
devtools::load_all()
MakeHist(df, ann_df, grouping="Day")
ann_df
MakeHist(df, ann_df, grouping="Condition")
df = data.table::fread("Downloads/featureCounts_REF_human_d2d16.txt") %>%
distinct(V1, .keep_all=T) %>%
column_to_rownames(var="V1")
ann_df = data.table::fread("REF_ann_withDay.txt") %>% filter(Day!=0) %>% mutate(Day=factor(Day))
MakeHist(df, ann_df, grouping="Condition")
df = data.table::fread("Downloads/featureCounts_REF_human_d2d16.txt") %>%
distinct(V1, .keep_all=T) %>%
column_to_rownames(var="V1")
ann_df = data.table::fread("REF_ann_withDay.txt") %>% filter(Day!=0) %>% mutate(Day=factor(Day))
MakeHist(df, ann_df, grouping="Day")
devtools::load_all()
devtools::load_all()
devtools::load_all()
df = data.table::fread("Downloads/featureCounts_REF_human_d2d16.txt")
BulkPreproc(df)
devtools::load_all()
devtools::load_all()
BulkPreproc(df)
scPreproc(df)
devtools::load_all()
scPreproc(df)
df = readRDS("tang_raw_symb_conv.rds")
scPreproc(df)
devtools::load_all()
devtools::load_all()
df = readRDS("tang_raw.rds")
gene_map = data.table::fread("tang_genemap.csv")
convertSymbol(df, gene_map)
devtools::load_all()
convertSymbol(df, gene_map)
df2 = convertSymbol(df, gene_map)
convertSymbol(df2, gene_map, conv_col = "name")
devtools::load_all()
gene_map
df = readRDS("tang_raw.rds")
gene_map = data.table::fread("tang_genemap.csv")
df2 = convertSymbol(df, gene_map)
gene_map
devtools::load_all()
df2 = convertSymbol(df, gene_map)
devtools::load_all()
df2 = convertSymbol(df, gene_map)
convertSymbol(df2, gene_map, conv_col = "name", init_col = "converted_alias")
df
df2
devtools::load_all()
df = data.table::fread("Downloads/featureCounts_REF_human_d2d16.txt")
hm = data.table::fread("Downloads/mouse_human_homology.txt")
hm
convertSpecies(df, hm, old_id = "Human gene stable ID", new_id = "Gene stable ID")
df_conv = convertSpecies(df, hm, old_id = "Human gene stable ID", new_id = "Gene stable ID")
df_conv
df_conv %>% distinct(Geneid)
devtools::document()
devtools::load_all()
devtools::document()
ref_df = readRDS("featureCounts_REF_human_d2d16_norm.rds")
tang_df = readRDS("tang_raw_symb_convp1.rds")
tang_df
ann_df = data.table::fread("REF_ann_withDay.txt")
QDS(train_df = ref_df, test_df = tang_df, ann_df = ann_df, y_col = "Day")
devtools::document()
devtools::load_all()
qds_df = QDS(train_df = ref_df, test_df = tang_df, ann_df = ann_df, y_col = "Day")
test_ann = data.table::fread("tang_ann.txt")
make_boxplot(qds_df, test_ann, x="Condition", levels=c("LowPD", "LowPD50Gy",
"HighPD", "Sen"))
devtools::document()
ref_raw = data.table::fread("Downloads/featureCounts_REF_human_d2d16.txt")
ref_raw
ref_raw = data.table::fread("Downloads/featureCounts_REF_human_d2d16.txt") %>%
rename(V1=Geneid)
ref_raw = data.table::fread("Downloads/featureCounts_REF_human_d2d16.txt") %>%
rename(Geneid=V1)
ref_raw
ref_raw = data.table::fread("Downloads/featureCounts_REF_human_d2d16.txt") %>%
devtools::use_data(ref_raw)
ref_raw = data.table::fread("Downloads/featureCounts_REF_human_d2d16.txt") %>%
rename(Geneid=V1)
devtools::use_data(ref_raw)
x <- c(1:10)
devtools::use_data(x)
use_data
usethis::use_data(x)
ref_raw = data.table::fread("Downloads/featureCounts_REF_human_d2d16.txt") %>%
rename(Geneid=V1)
usethis::use_data(ref_raw)
setwd("QDSWorkflow/")
ref_raw = data.table::fread("Downloads/featureCounts_REF_human_d2d16.txt") %>%
rename(Geneid=V1)
setwd("QDSWorkflow/")
ref_raw = data.table::fread("../Downloads/featureCounts_REF_human_d2d16.txt") %>%
rename(Geneid=V1)
usethis::use_data(ref_raw)
df = readRDS("Lung_Cancer_Epithelial_raw.rds")
df
lc_raw = readRDS("Lung_Cancer_Epithelial_raw.rds")
usethis::use_data(lc_raw)
setwd("QDSWorkflow/")
usethis::use_data(lc_raw)
devtools::load_all()
devtools::document()
devtools::load_all()
devtools::load_all()
devtools::load_all()
setwd("QDSWorkflow/")
system.file("REF_norm_final.rds", package="QDSWorkflow")
devtools::load_all()
test_df = readRDS("QDSWorkflow/inst/REF_final_norm.rds")
PrebuiltQDSModel(test_df)
devtools::document()
devtools::load_all()
test_df = readRDS("QDSWorkflow/inst/REF_final_norm.rds")
devtools::load_all()
test_df = readRDS("QDSWorkflow/inst/extdata/REF_final_norm.rds")
PrebuiltQDSModel(test_df)
system.file("extdata", "REF_norm_final.rds", package="QDSWorkflow")
system.file(package="QDSWorkflow")
system.file("extdata", package="QDSWorkflow")
devtools::load_all()
test_df = readRDS("QDSWorkflow/inst/extdata/REF_final_norm.rds")
PrebuiltQDSModel(test_df)
test_df = readRDS("QDSWorkflow/inst/extdata/REF_final_norm.rds")
PrebuiltQDSModel(test_df)
devtools::load_all()
test_df = readRDS("QDSWorkflow/inst/extdata/REF_final_norm.rds")
PrebuiltQDSModel(test_df)
devtools::load_all()
test_df = readRDS("QDSWorkflow/inst/extdata/REF_final_norm.rds")
PrebuiltQDSModel(test_df)
devtools::load_all()
test_df = readRDS("QDSWorkflow/inst/extdata/REF_final_norm.rds")
PrebuiltQDSModel(test_df)
test_df = readRDS("QDSWorkflow/inst/extdata/REF_final_norm.rds")
devtools::load_all()
test_df = readRDS("QDSWorkflow/inst/extdata/REF_final_norm.rds")
PrebuiltQDSModel(test_df)
test_df = readRDS("musc_regen_test.rds")
PrebuiltQDSModel(test_df)
devtools::load_all()
devtools::load_all()
test_df = readRDS("musc_regen_test.rds")
PrebuiltQDSModel(test_df)
test_df = readRDS("musc_regen_test.rds")
qds_df = PrebuiltQDSModel(test_df)
ann_df = data.frame(sample_id=qds_df$sample_id, Condition=rep(c("fSC", "pSC", "uSC", "ASC"), each=2))
make_boxplot(df, ann_df, x="Condition")
ann_df
make_boxplot(qds_df, ann_df, x="Condition")
devtools::document()
devtools::document()
devtools::document()
devtools::document()
hm = data.table::fread("Downloads/mouse_rat_homology.txt")
hm
mouse_rat_hm = data.table::fread("Downloads/mouse_rat_homology.txt")
usethis::use_data(mouse_rat_hm)
mouse_rat_hm = data.table::fread("Downloads/mouse_rat_homology.txt")
setwd("QDSWorkflow/")
usethis::use_data(mouse_rat_hm)
rat_human_hm = data.table::fread("Downloads/rat_human_homology (1).txt")
setwd("QDSWorkflow/")
usethis::use_data(rat_human_hm)
rat_human_hm
musc_raw= data.table::fread("featureCounts_musc_regen.txt")
setwd("QDSWorkflow/")
usethis::use_data(musc_raw)
musc_raw
ref_df = readRDS("featureCounts_REF_human_d2d16_norm.rds")
tang_df = readRDS("tang_raw_symb_convp1.rds")
ann_df = data.table::fread("REF_ann_withDay.txt")
qds_df = QDS(train_df = ref_df, test_df = tang_df, ann_df = ann_df, y_col = "Day")
test_ann = data.table::fread("tang_ann.txt")
make_boxplot(qds_df, test_ann, x="Condition", levels=c("LowPD", "LowPD50Gy",
"HighPD", "Sen"))
musc_raw
ann_df = data.frame(sample_id=colnames(ann_df)[-1],
Condition=rep(c("fixed", "perfused",
"unperfused", "activated"), each=2))
ann_df = data.frame(sample_id=colnames(musc_raw)[-1],
Condition=rep(c("fixed", "perfused",
"unperfused", "activated"), each=2))
ann_df
musc_ann = data.frame(sample_id=colnames(musc_raw)[-1],
Condition=rep(c("fixed", "perfused",
"unperfused", "activated"), each=2))
usethis::use_data(musc_ann)
musc_ann = data.frame(sample_id=colnames(musc_raw)[-1],
Condition=rep(c("fixed", "perfused",
"unperfused", "activated"), each=2))
setwd("QDSWorkflow/")
usethis::use_data(musc_ann)
qds_df = PrebuiltQDSModel(musc_raw)
musc_df = readRDS("musc_regen_test.rds")
qds_df = PrebuiltQDSModel(musc_df)
make_boxplot(qds_df, musc_ann, "Condition", title="QDS of muscle stem cells \n under different perfusion conditions")
musc_df = musc_raw %>% BulkPreproc() %>%
convertSpecies(hm=mouse_rat_hm, old_id = "Gene stable ID", new_id = "Rat gene stable ID")
qds_df = PrebuiltQDSModel(musc_df)
make_boxplot(qds_df, musc_ann, "Condition", title="QDS of muscle stem cells \n under different perfusion conditions")
